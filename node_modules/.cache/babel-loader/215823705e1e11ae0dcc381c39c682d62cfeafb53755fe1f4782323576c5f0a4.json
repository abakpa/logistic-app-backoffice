{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './rootReducer';\nimport rootSaga from './sagas/rootSaga';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: false\n  }).concat(sagaMiddleware)\n});\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","store","reducer","middleware","getDefaultMiddleware","thunk","concat","run"],"sources":["/Users/josephabakpa/Documents/CODES/LOGISTIC APP/back-office/src/redux/store.js"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './rootReducer'\nimport rootSaga from './sagas/rootSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = configureStore({\n    reducer:rootReducer,\n    middleware:(getDefaultMiddleware)=>getDefaultMiddleware({thunk:false}).concat(sagaMiddleware)\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,MAAMC,cAAc,GAAGH,oBAAoB,CAAC,CAAC;AAE7C,MAAMI,KAAK,GAAGL,cAAc,CAAC;EACzBM,OAAO,EAACJ,WAAW;EACnBK,UAAU,EAAEC,oBAAoB,IAAGA,oBAAoB,CAAC;IAACC,KAAK,EAAC;EAAK,CAAC,CAAC,CAACC,MAAM,CAACN,cAAc;AAChG,CAAC,CAAC;AAEFA,cAAc,CAACO,GAAG,CAACR,QAAQ,CAAC;AAE5B,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}