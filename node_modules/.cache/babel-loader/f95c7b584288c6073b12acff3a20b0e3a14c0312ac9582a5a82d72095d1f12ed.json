{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { fetchVehicleRequest, fetchVehicleSuccess, fetchVehicleFailure, createVehicleRequest, createVehicleSuccess, createVehicleFailure } from '../slices/vehicleSlice';\nfunction* fetchVehicleSaga() {\n  try {\n    const response = yield call(axios.get, 'http://localhost:4000/api/vehicles');\n    console.log(\">>>>>>\", response);\n    yield put(fetchVehicleSuccess(response.data));\n  } catch (error) {\n    yield put(fetchVehicleFailure(error.response.data.message));\n  }\n}\nfunction* createVehicleSaga(action) {\n  const {\n    details,\n    navigate\n  } = action.payload;\n  try {\n    const response = yield call(axios.post, 'http://localhost:4000/api/users', details);\n    console.log(response);\n    yield put(createVehicleSuccess(response.data));\n    navigate('/Users');\n  } catch (error) {\n    yield put(createFailure(error.message));\n  }\n}\nfunction* vehicleSaga() {\n  yield takeLatest(fetchVehicleRequest.type, fetchVehicleSaga);\n  yield takeLatest(createVehicleRequest.type, createVehicleSaga);\n}\nexport default vehicleSaga;","map":{"version":3,"names":["call","put","takeLatest","axios","fetchVehicleRequest","fetchVehicleSuccess","fetchVehicleFailure","createVehicleRequest","createVehicleSuccess","createVehicleFailure","fetchVehicleSaga","response","get","console","log","data","error","message","createVehicleSaga","action","details","navigate","payload","post","createFailure","vehicleSaga","type"],"sources":["/Users/josephabakpa/Documents/CODES/LOGISTIC APP/front-end/src/redux/sagas/vehicleSaga.js"],"sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects'\nimport axios from 'axios'\nimport {fetchVehicleRequest,fetchVehicleSuccess,fetchVehicleFailure,createVehicleRequest,createVehicleSuccess,createVehicleFailure} from '../slices/vehicleSlice'\n\n function* fetchVehicleSaga(){\n    try {\n        const response = yield call(axios.get, 'http://localhost:4000/api/vehicles')\n        console.log(\">>>>>>\",response)\n        yield put(fetchVehicleSuccess(response.data))\n    } catch (error) {\n        yield put(fetchVehicleFailure(error.response.data.message))\n    }\n}\nfunction* createVehicleSaga(action){\n    const {details,navigate} = action.payload\n    try {\n        const response = yield call(axios.post,'http://localhost:4000/api/users', details);\n        console.log(response)\n        yield put(createVehicleSuccess(response.data))\n        navigate('/Users')\n    } catch (error) {\n        yield put(createFailure(error.message))\n    }\n}\n\nfunction* vehicleSaga(){\n    yield takeLatest(fetchVehicleRequest.type, fetchVehicleSaga)\n    yield takeLatest(createVehicleRequest.type, createVehicleSaga)\n}\n\nexport default vehicleSaga"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAO,oBAAoB;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,mBAAmB,EAACC,mBAAmB,EAACC,mBAAmB,EAACC,oBAAoB,EAACC,oBAAoB,EAACC,oBAAoB,QAAO,wBAAwB;AAEhK,UAAUC,gBAAgBA,CAAA,EAAE;EACzB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACG,KAAK,CAACS,GAAG,EAAE,oCAAoC,CAAC;IAC5EC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACH,QAAQ,CAAC;IAC9B,MAAMV,GAAG,CAACI,mBAAmB,CAACM,QAAQ,CAACI,IAAI,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMf,GAAG,CAACK,mBAAmB,CAACU,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACE,OAAO,CAAC,CAAC;EAC/D;AACJ;AACA,UAAUC,iBAAiBA,CAACC,MAAM,EAAC;EAC/B,MAAM;IAACC,OAAO;IAACC;EAAQ,CAAC,GAAGF,MAAM,CAACG,OAAO;EACzC,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMX,IAAI,CAACG,KAAK,CAACoB,IAAI,EAAC,iCAAiC,EAAEH,OAAO,CAAC;IAClFP,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB,MAAMV,GAAG,CAACO,oBAAoB,CAACG,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9CM,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,MAAMf,GAAG,CAACuB,aAAa,CAACR,KAAK,CAACC,OAAO,CAAC,CAAC;EAC3C;AACJ;AAEA,UAAUQ,WAAWA,CAAA,EAAE;EACnB,MAAMvB,UAAU,CAACE,mBAAmB,CAACsB,IAAI,EAAEhB,gBAAgB,CAAC;EAC5D,MAAMR,UAAU,CAACK,oBAAoB,CAACmB,IAAI,EAAER,iBAAiB,CAAC;AAClE;AAEA,eAAeO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}