{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  order: [],\n  loading: false,\n  error: null\n};\nconst orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    fetchOrderRequest: state => {\n      state.loading = true;\n    },\n    fetchOrderSuccess: (state, action) => {\n      state.order = action.payload;\n      state.loading = false;\n    },\n    fetchOrderFailure: (state, action) => {\n      state.error = action.payload;\n    },\n    fetchOrderByUserRequest: state => {\n      state.loading = true;\n    },\n    fetchOrderByUserSuccess: (state, action) => {\n      state.order = action.payload;\n      state.loading = false;\n    },\n    fetchOrderFailure: (state, action) => {\n      state.error = action.payload;\n    },\n    fetchOrderForPickupRequest: state => {\n      state.loading = true;\n    },\n    fetchOrderForPickupSuccess: (state, action) => {\n      state.order = action.payload;\n      state.loading = false;\n    },\n    fetchOrderForPickupFailure: (state, action) => {\n      state.error = action.payload;\n    },\n    fetchDriverOrderRequest: state => {\n      state.loading = true;\n    },\n    fetchDriverOrderSuccess: (state, action) => {\n      state.order = action.payload;\n      state.loading = false;\n    },\n    fetchDriverOrderFailure: (state, action) => {\n      state.error = action.payload;\n    },\n    createOrderRequest: state => {\n      state.loading = true;\n    },\n    createOrderSuccess: (state, action) => {\n      state.order.push(action.payload);\n      state.loading = false;\n    },\n    createOrderFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  fetchOrderRequest,\n  fetchOrderSuccess,\n  fetchOrderFailure,\n  fetchOrderForPickupRequest,\n  fetchOrderForPickupSuccess,\n  fetchOrderForPickupFailure,\n  fetchDriverOrderRequest,\n  fetchDriverOrderSuccess,\n  fetchDriverOrderFailure,\n  createOrderRequest,\n  createOrderSuccess,\n  createOrderFailure\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","order","loading","error","orderSlice","name","reducers","fetchOrderRequest","state","fetchOrderSuccess","action","payload","fetchOrderFailure","fetchOrderByUserRequest","fetchOrderByUserSuccess","fetchOrderForPickupRequest","fetchOrderForPickupSuccess","fetchOrderForPickupFailure","fetchDriverOrderRequest","fetchDriverOrderSuccess","fetchDriverOrderFailure","createOrderRequest","createOrderSuccess","push","createOrderFailure","actions","reducer"],"sources":["/Users/josephabakpa/Documents/CODES/LOGISTIC APP/front-end/src/redux/slices/orderSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    order: [],\n    loading: false,\n    error:null,\n};\n\nconst orderSlice = createSlice({\n    name:'order',\n    initialState,\n    reducers:{\n        fetchOrderRequest:(state)=>{\n            state.loading = true\n        },\n        fetchOrderSuccess:(state,action)=>{\n            state.order= action.payload;\n            state.loading=false\n        },\n        fetchOrderFailure:(state,action)=>{\n            state.error = action.payload\n        },\n        fetchOrderByUserRequest:(state)=>{\n            state.loading = true\n        },\n        fetchOrderByUserSuccess:(state,action)=>{\n            state.order= action.payload;\n            state.loading=false\n        },\n        fetchOrderFailure:(state,action)=>{\n            state.error = action.payload\n        },\n        fetchOrderForPickupRequest:(state)=>{\n            state.loading = true\n        },\n        fetchOrderForPickupSuccess:(state,action)=>{\n            state.order= action.payload;\n            state.loading=false\n        },\n        fetchOrderForPickupFailure:(state,action)=>{\n            state.error = action.payload\n        },\n        fetchDriverOrderRequest:(state)=>{\n            state.loading = true\n        },\n        fetchDriverOrderSuccess:(state,action)=>{\n            state.order= action.payload;\n            state.loading=false\n        },\n        fetchDriverOrderFailure:(state,action)=>{\n            state.error = action.payload\n        },\n        createOrderRequest:(state)=>{\n            state.loading=true\n        },\n        createOrderSuccess:(state,action)=>{\n            state.order.push(action.payload)\n            state.loading=false\n        },\n        createOrderFailure:(state,action)=>{\n            state.error=action.payload\n            state.loading=false\n        }\n    }\n})\n\nexport const {\n    fetchOrderRequest,\n    fetchOrderSuccess,\n    fetchOrderFailure,\n    fetchOrderForPickupRequest,\n    fetchOrderForPickupSuccess,\n    fetchOrderForPickupFailure,\n    fetchDriverOrderRequest,\n    fetchDriverOrderSuccess,\n    fetchDriverOrderFailure,\n    createOrderRequest,\n    createOrderSuccess,\n    createOrderFailure\n} = orderSlice.actions\n\nexport default orderSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}