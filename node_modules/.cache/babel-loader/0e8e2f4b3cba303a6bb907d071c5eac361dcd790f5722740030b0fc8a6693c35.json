{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notification: '',\n  loading: false,\n  error: null\n};\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    fetchNotificationRequest: state => {\n      state.loading = true;\n    },\n    fetchNotificationSuccess: (state, action) => {\n      state.notification = action.payload;\n      state.loading = false;\n    },\n    fetchNotificationFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    createAdminRequest: state => {\n      state.loading = true;\n    },\n    createAdminSuccess: (state, action) => {\n      state.admin.push(action.payload);\n      state.loading = false;\n    },\n    createAdminFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  fetchNNotificationRequest,\n  fetchNotificationSuccess,\n  fetchNotificationFailure,\n  createAdminRequest,\n  createAdminSuccess,\n  createAdminFailure\n} = notificationSlice.actions;\nexport default notificationSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","notification","loading","error","notificationSlice","name","reducers","fetchNotificationRequest","state","fetchNotificationSuccess","action","payload","fetchNotificationFailure","createAdminRequest","createAdminSuccess","admin","push","createAdminFailure","fetchNNotificationRequest","actions","reducer"],"sources":["/Users/josephabakpa/Documents/CODES/LOGISTIC APP/back-office/src/redux/slices/notification.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {\n    notification: '',\n    loading: false,\n    error:null,\n};\n\nconst notificationSlice = createSlice({\n    name: 'notification',\n    initialState,\n    reducers:{\n        fetchNotificationRequest: (state) => {\n            state.loading = true\n        },\n        fetchNotificationSuccess:(state,action)=>{\n            state.notification = action.payload;\n            state.loading = false;\n        },\n        fetchNotificationFailure:(state,action)=>{\n            state.error = action.payload;\n            state.loading = false;\n        },\n        createAdminRequest:(state)=>{\n            state.loading = true\n        },\n        createAdminSuccess: (state,action) =>{\n            state.admin.push(action.payload)\n            state.loading = false\n        },\n        createAdminFailure:(state,action)=>{\n            state.error=action.payload\n            state.loading=false\n        }\n    }\n})\n\nexport const {\n    fetchNNotificationRequest,\n    fetchNotificationSuccess,\n    fetchNotificationFailure,\n    createAdminRequest,\n    createAdminSuccess,\n    createAdminFailure\n} = notificationSlice.actions;\n\nexport default notificationSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAC;AACV,CAAC;AAED,MAAMC,iBAAiB,GAAGL,WAAW,CAAC;EAClCM,IAAI,EAAE,cAAc;EACpBL,YAAY;EACZM,QAAQ,EAAC;IACLC,wBAAwB,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC;IACDO,wBAAwB,EAACA,CAACD,KAAK,EAACE,MAAM,KAAG;MACrCF,KAAK,CAACP,YAAY,GAAGS,MAAM,CAACC,OAAO;MACnCH,KAAK,CAACN,OAAO,GAAG,KAAK;IACzB,CAAC;IACDU,wBAAwB,EAACA,CAACJ,KAAK,EAACE,MAAM,KAAG;MACrCF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACN,OAAO,GAAG,KAAK;IACzB,CAAC;IACDW,kBAAkB,EAAEL,KAAK,IAAG;MACxBA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC;IACDY,kBAAkB,EAAEA,CAACN,KAAK,EAACE,MAAM,KAAI;MACjCF,KAAK,CAACO,KAAK,CAACC,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;MAChCH,KAAK,CAACN,OAAO,GAAG,KAAK;IACzB,CAAC;IACDe,kBAAkB,EAACA,CAACT,KAAK,EAACE,MAAM,KAAG;MAC/BF,KAAK,CAACL,KAAK,GAACO,MAAM,CAACC,OAAO;MAC1BH,KAAK,CAACN,OAAO,GAAC,KAAK;IACvB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTgB,yBAAyB;EACzBT,wBAAwB;EACxBG,wBAAwB;EACxBC,kBAAkB;EAClBC,kBAAkB;EAClBG;AACJ,CAAC,GAAGb,iBAAiB,CAACe,OAAO;AAE7B,eAAef,iBAAiB,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}