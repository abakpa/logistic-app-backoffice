{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { fetchDriverRequest, fetchDriverSuccess, fetchDriverFailure, createDriverRequest, createDriverSuccess, createDriverFailure } from '../slices/driverSlice';\nfunction* fetchDriverSaga() {\n  try {\n    const token = localStorage.getItem('authToken');\n    const userId = localStorage.getItem('userId');\n    const userEmail = localStorage.getItem('userEmail');\n    console.log;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = yield call(axios.get, 'http://localhost:4000/api/drivers', config);\n    yield put(fetchDriverSuccess(response.data));\n  } catch (error) {\n    yield put(fetchDriverFailure(error.response.data.message));\n  }\n}\nfunction* createDriverSaga(action) {\n  const {\n    details,\n    navigate\n  } = action.payload;\n  try {\n    const token = localStorage.getItem('authToken');\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = yield call(axios.post, 'http://localhost:4000/api/drivers', details, config);\n    yield put(createDriverSuccess(response.data));\n    navigate('/Drivers');\n  } catch (error) {\n    yield put(createDriverFailure(error.response.data.message));\n  }\n}\nfunction* driverSaga() {\n  yield takeLatest(fetchDriverRequest.type, fetchDriverSaga);\n  yield takeLatest(createDriverRequest.type, createDriverSaga);\n}\nexport default driverSaga;","map":{"version":3,"names":["call","put","takeLatest","axios","fetchDriverRequest","fetchDriverSuccess","fetchDriverFailure","createDriverRequest","createDriverSuccess","createDriverFailure","fetchDriverSaga","token","localStorage","getItem","userId","userEmail","console","log","config","headers","Authorization","response","get","data","error","message","createDriverSaga","action","details","navigate","payload","post","driverSaga","type"],"sources":["/Users/josephabakpa/Documents/CODES/LOGISTIC APP/front-end/src/redux/sagas/driverSaga.js"],"sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects'\nimport axios from 'axios'\nimport {fetchDriverRequest,fetchDriverSuccess,fetchDriverFailure,createDriverRequest,createDriverSuccess,createDriverFailure} from '../slices/driverSlice'\n\n function* fetchDriverSaga(){\n    try {\n        const token = localStorage.getItem('authToken');\n        const userId = localStorage.getItem('userId');\n        const userEmail = localStorage.getItem('userEmail');\n        console.log\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        const response = yield call(axios.get, 'http://localhost:4000/api/drivers',config)\n        yield put(fetchDriverSuccess(response.data))\n    } catch (error) {\n        yield put(fetchDriverFailure(error.response.data.message))\n    }\n}\nfunction* createDriverSaga(action){\n    const {details,navigate} = action.payload\n    try {\n      \n        const token = localStorage.getItem('authToken');\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }\n        const response = yield call(axios.post,'http://localhost:4000/api/drivers', details,config);\n        yield put(createDriverSuccess(response.data))\n        navigate('/Drivers')\n    } catch (error) {\n        yield put(createDriverFailure(error.response.data.message))\n    }\n}\n\nfunction* driverSaga(){\n    yield takeLatest(fetchDriverRequest.type, fetchDriverSaga)\n    yield takeLatest(createDriverRequest.type, createDriverSaga)\n}\n\nexport default driverSaga"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAO,oBAAoB;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,kBAAkB,EAACC,kBAAkB,EAACC,kBAAkB,EAACC,mBAAmB,EAACC,mBAAmB,EAACC,mBAAmB,QAAO,uBAAuB;AAEzJ,UAAUC,eAAeA,CAAA,EAAE;EACxB,IAAI;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAME,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnDG,OAAO,CAACC,GAAG;IACX,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUT,KAAK;MAClC;IACJ,CAAC;IACD,MAAMU,QAAQ,GAAG,MAAMrB,IAAI,CAACG,KAAK,CAACmB,GAAG,EAAE,mCAAmC,EAACJ,MAAM,CAAC;IAClF,MAAMjB,GAAG,CAACI,kBAAkB,CAACgB,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMvB,GAAG,CAACK,kBAAkB,CAACkB,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC,CAAC;EAC9D;AACJ;AACA,UAAUC,gBAAgBA,CAACC,MAAM,EAAC;EAC9B,MAAM;IAACC,OAAO;IAACC;EAAQ,CAAC,GAAGF,MAAM,CAACG,OAAO;EACzC,IAAI;IAEA,MAAMnB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMK,MAAM,GAAG;MACXC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUT,KAAK;MAClC;IACJ,CAAC;IACD,MAAMU,QAAQ,GAAG,MAAMrB,IAAI,CAACG,KAAK,CAAC4B,IAAI,EAAC,mCAAmC,EAAEH,OAAO,EAACV,MAAM,CAAC;IAC3F,MAAMjB,GAAG,CAACO,mBAAmB,CAACa,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC7CM,QAAQ,CAAC,UAAU,CAAC;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,MAAMvB,GAAG,CAACQ,mBAAmB,CAACe,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC,CAAC;EAC/D;AACJ;AAEA,UAAUO,UAAUA,CAAA,EAAE;EAClB,MAAM9B,UAAU,CAACE,kBAAkB,CAAC6B,IAAI,EAAEvB,eAAe,CAAC;EAC1D,MAAMR,UAAU,CAACK,mBAAmB,CAAC0B,IAAI,EAAEP,gBAAgB,CAAC;AAChE;AAEA,eAAeM,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}